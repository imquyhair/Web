let currentSlide = 0;
const slides = document.querySelectorAll('.song-card');
const totalSlides = slides.length;
const wrapper = document.querySelector('.songs-wrapper');
const slideWidth = () => slides[0].offsetWidth + 20;

const moveSlider = (direction) => {
    const nextSlide = currentSlide + direction;

    if (nextSlide < 0 || nextSlide >= totalSlides) {
        return;
    }

    currentSlide = nextSlide;

    const newTransform = -currentSlide * slideWidth();
    wrapper.style.transition = 'transform 0.5s ease-in-out';
    wrapper.style.transform = `translateX(${newTransform}px)`;
};

const updateSliderWidth = () => {
    const newSlideWidth = slideWidth();
    const newTransform = -currentSlide * newSlideWidth;
    wrapper.style.transition = 'none';
    wrapper.style.transform = `translateX(${newTransform}px)`;
    wrapper.offsetHeight;
    wrapper.style.transition = 'transform 0.5s ease-in-out';
};


document.querySelector('.btn-slide.left').addEventListener('click', () => moveSlider(-1));
document.querySelector('.btn-slide.right').addEventListener('click', () => moveSlider(1));
document.addEventListener("DOMContentLoaded", function () {
    let songCards = document.querySelectorAll(".song-card");
    let audioPlayer = document.getElementById("audio-player");
    let songTitle = document.getElementById("current-song-title");
    let songArtist = document.getElementById("current-song-artist");
    let songImage = document.getElementById("current-song-img");
    let playPauseBtn = document.getElementById("play-pause-btn");
    let seekBar = document.getElementById("seek-bar");

    songCards.forEach(card => {
        card.addEventListener("click", function () {
            let audio = this.getAttribute("data-audio");
            let title = this.getAttribute("data-title");
            let artist = this.getAttribute("data-artist");
            let image = this.getAttribute("data-image");

            audioPlayer.src = audio;
            songTitle.textContent = title;
            songArtist.textContent = artist;
            songImage.src = image;

            audioPlayer.play();
            playPauseBtn.innerHTML = '<i class="fas fa-pause"></i>';
        });
    });
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("searchForm").addEventListener("submit", function (event) {
            let searchInput = document.getElementById("searchInput").value.trim();

            if (searchInput === "") {
                alert("Vui l√≤ng nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm!");
                event.preventDefault(); // NgƒÉn form g·ª≠i ƒëi
            }

        });

    });
    AOS.init({
        duration: 1000,
        once: true
    });


});
function toggleChat(event) {
    if (event) event.preventDefault();
    let chatbox = document.getElementById("chatbot");
    chatbox.style.display = (chatbox.style.display === "none" || chatbox.style.display === "") ? "flex" : "none";
}

function sendMessage() {
    let inputField = document.getElementById("chatbot-text");
    let message = inputField.value.trim();
    if (message === "") return;

    appendMessage("user", message);

    // G·ª≠i d·ªØ li·ªáu ƒë·∫øn chatbot.php
    fetch("chatbot.php", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ message: message })
    })
        .then(response => response.json())
        .then(data => {
            appendMessage("ai", data.response); // Hi·ªÉn th·ªã ph·∫£n h·ªìi t·ª´ AI
        })
        .catch(error => {
            appendMessage("ai", "‚ö†Ô∏è C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!");
        });

    inputField.value = "";
}


function appendMessage(sender, message) {
    let chatboxMessages = document.getElementById("chatbot-messages");

    if (!chatboxMessages) {
        console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn hi·ªÉn th·ªã tin nh·∫Øn!");
        return;
    }

    let messageDiv = document.createElement("div");
    messageDiv.className = sender === "user" ? "message user-message" : "message ai-message";
    messageDiv.innerHTML = `<b>${sender === "user" ? "B·∫°n" : "AI"}:</b> ${message}`;

    chatboxMessages.appendChild(messageDiv);
    chatboxMessages.scrollTop = chatboxMessages.scrollHeight; // Cu·ªôn xu·ªëng tin nh·∫Øn m·ªõi nh·∫•t
}

function playSong(songId) {
    alert("Ph√°t b√†i h√°t c√≥ ID: " + songId);
}

document.addEventListener("DOMContentLoaded", function () {
    // üåü Ki·ªÉm tra xem trang c√≥ ƒëang ƒë∆∞·ª£c load t·ª´ logo ho·∫∑c quay l·∫°i t·ª´ "Nghe ngay" kh√¥ng
    let isReloadFromLogo = sessionStorage.getItem("reloadFromLogo");
    let isReturning = sessionStorage.getItem("returningFromMusic");

    if (isReloadFromLogo || isReturning) {
        // N·∫øu quay l·∫°i t·ª´ "Nghe ngay" ho·∫∑c reload t·ª´ logo, kh√¥i ph·ª•c tin nh·∫Øn chatbot
        let savedMessages = localStorage.getItem("chatbotHistory");
        if (savedMessages) {
            let chatbox = document.getElementById("chatbot-messages");
            if (chatbox) {
                chatbox.innerHTML = savedMessages;
            }
        }
    } else {
        // N·∫øu b·∫•m F5 ho·∫∑c refresh tr√¨nh duy·ªát ‚Üí X√≥a h·∫øt d·ªØ li·ªáu chatbot
        localStorage.removeItem("chatbotHistory");
    }

    // Sau khi trang t·∫£i xong, x√≥a c·ªù tr√°nh gi·ªØ tr·∫°ng th√°i vƒ©nh vi·ªÖn
    sessionStorage.removeItem("reloadFromLogo");
    sessionStorage.removeItem("returningFromMusic");
});

// üåü L∆∞u tin nh·∫Øn v√†o localStorage tr∆∞·ªõc khi t·∫£i l·∫°i trang t·ª´ logo
function reloadWithoutLosingChat(event) {
    event.preventDefault(); // NgƒÉn trang load l·∫°i to√†n b·ªô

    let chatbotMessages = document.getElementById("chatbot-messages").innerHTML;
    localStorage.setItem("chatbotHistory", chatbotMessages);

    // ƒê√°nh d·∫•u r·∫±ng trang ƒëang reload t·ª´ logo
    sessionStorage.setItem("reloadFromLogo", "true");

    // T·∫£i l·∫°i trang m√† kh√¥ng m·∫•t d·ªØ li·ªáu chatbot
    location.reload();
}

// üåü X·ª≠ l√Ω khi ng∆∞·ªùi d√πng nh·∫•n v√†o "Nghe ngay"
document.addEventListener("click", function (event) {
    let target = event.target.closest("a");

    if (target && target.href.includes("playlist.php?id=")) {
        // Tr∆∞·ªõc khi chuy·ªÉn trang, l∆∞u l·ªãch s·ª≠ tin nh·∫Øn
        let chatbotMessages = document.getElementById("chatbot-messages").innerHTML;
        localStorage.setItem("chatbotHistory", chatbotMessages);

        // ƒê√°nh d·∫•u r·∫±ng ng∆∞·ªùi d√πng ƒëang ƒëi ƒë·∫øn trang nghe nh·∫°c
        sessionStorage.setItem("returningFromMusic", "true");
    }
});


// üåü L∆∞u tin nh·∫Øn khi chuy·ªÉn trang
document.querySelectorAll("a").forEach(link => {
    link.addEventListener("click", function (event) {
        let chatbotMessages = document.getElementById("chatbot-messages").innerHTML;
        localStorage.setItem("chatbotHistory", chatbotMessages);

        // ƒê√°nh d·∫•u r·∫±ng trang ƒëang chuy·ªÉn h∆∞·ªõng
        sessionStorage.setItem("navigated", "true");
    });
});

// üåü G·∫Øn s·ª± ki·ªán khi b·∫•m v√†o logo
document.addEventListener("DOMContentLoaded", function () {
    let logo = document.getElementById("logo");
    if (logo) {
        logo.addEventListener("click", reloadWithoutLosingChat);
    }
});
document.addEventListener("DOMContentLoaded", function () {
    // üåü Ki·ªÉm tra xem trang c√≥ ƒëang ƒë∆∞·ª£c load t·ª´ logo ho·∫∑c chuy·ªÉn trang kh√¥ng
    let isReloadFromLogo = sessionStorage.getItem("reloadFromLogo");
    let isNavigated = sessionStorage.getItem("navigated");

    if (isReloadFromLogo || isNavigated) {
        // N·∫øu l√†m m·ªõi t·ª´ logo ho·∫∑c chuy·ªÉn trang, kh√¥i ph·ª•c tin nh·∫Øn chatbot
        let savedMessages = localStorage.getItem("chatbotHistory");
        if (savedMessages) {
            let chatbox = document.getElementById("chatbot-messages");
            if (chatbox) {
                chatbox.innerHTML = savedMessages;
            }
        }

        // X√≥a c·ªù ƒë·ªÉ l·∫ßn refresh ti·∫øp theo s·∫Ω reset to√†n b·ªô trang
        sessionStorage.removeItem("reloadFromLogo");
        sessionStorage.removeItem("navigated");
    } else {
        // N·∫øu l√†m m·ªõi t·ª´ F5 ho·∫∑c refresh tr√¨nh duy·ªát, x√≥a d·ªØ li·ªáu c≈© ƒë·ªÉ trang reset to√†n b·ªô
        localStorage.removeItem("chatbotHistory");
    }
});

// üåü L∆∞u tin nh·∫Øn v√†o localStorage tr∆∞·ªõc khi t·∫£i l·∫°i trang t·ª´ logo
function reloadWithoutLosingChat(event) {
    event.preventDefault(); // NgƒÉn trang load l·∫°i to√†n b·ªô

    let chatbotMessages = document.getElementById("chatbot-messages").innerHTML;
    localStorage.setItem("chatbotHistory", chatbotMessages);

    // ƒê√°nh d·∫•u r·∫±ng trang ƒëang reload t·ª´ logo
    sessionStorage.setItem("reloadFromLogo", "true");

    // T·∫£i l·∫°i trang m√† kh√¥ng m·∫•t d·ªØ li·ªáu chatbot
    location.reload();
}

// üåü L∆∞u tin nh·∫Øn khi chuy·ªÉn trang
document.querySelectorAll("a").forEach(link => {
    link.addEventListener("click", function (event) {
        let chatbotMessages = document.getElementById("chatbot-messages").innerHTML;
        localStorage.setItem("chatbotHistory", chatbotMessages);

        // ƒê√°nh d·∫•u r·∫±ng trang ƒëang chuy·ªÉn h∆∞·ªõng
        sessionStorage.setItem("navigated", "true");
    });
});

// üåü G·∫Øn s·ª± ki·ªán khi b·∫•m v√†o logo
document.addEventListener("DOMContentLoaded", function () {
    let logo = document.getElementById("logo");
    if (logo) {
        logo.addEventListener("click", reloadWithoutLosingChat);
    }
});

document.addEventListener("mousemove", (e) => {
    const iframe = document.querySelector("iframe");
    const x = (e.clientX / window.innerWidth - 0.5) * 20;
    const y = (e.clientY / window.innerHeight - 0.5) * 20;

    iframe.style.transform = `rotateY(${x}deg) rotateX(${-y}deg)`;
});




